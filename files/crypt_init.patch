--- init	2013-08-02 16:10:32.932351469 +1000
+++ init	2013-08-02 16:18:26.445110460 +1000
@@ -254,6 +254,12 @@
 		nounionfs)
 			USE_UNIONFS_NORMAL=0
 			;;
+		nocryptpivot)
+			NO_CRYPT_PIVOT=1
+			;;
+		noautocrypt)
+			NO_AUTO_CRYPT=1
+			;;
 		*=*)
 			case "${x%%=*}" in
 			*.*)
@@ -485,6 +491,7 @@
 	fi
 fi
 
+
 # Determine root device
 good_msg 'Determining root device...'
 while true
@@ -636,6 +643,44 @@
 			fi
 		fi
 
+		if [ -e "${NEW_ROOT}/mnt/cryptdisk" ]; then
+			rm "${NEW_ROOT}/mnt/cryptdisk"
+		fi
+
+		if [ ! $NO_AUTO_CRYPT ]; then
+			good_msg 'Checking disks...'
+			for DEVICE in /dev/sd? /dev/hd?; do
+				DISK=$(basename "${DEVICE}")
+				REMOVABLE="/sys/block/${DISK}/removable"
+				if [ -e "${DEVICE}" ] && [ -e "${REMOVABLE}" ] && [ "$(cat ${REMOVABLE})" == "0" ]; then
+					echo -ne "Checking disk ${DISK} "
+					cryptsetup isLuks $DEVICE
+					if [ "$?" == "0" ]; then
+						echo -ne "[C]"
+						DID=$(hdparm -i ${DEVICE} | grep Model | cut -d "," -f 1,3 | tr -d ' ' | sha256sum | cut -d" " -f1)
+						KEYFILE="${NEW_ROOT}/var/db/keys/${DID}"
+						if [ -e $KEYFILE ]; then
+							echo "[Y]"
+							cryptsetup luksOpen $DEVICE "${DISK}-luks" --key-file $KEYFILE
+							vgchange -a y
+							if [ $NO_CRYPT_PIVOT ]; then
+								mkdir -p "${NEW_ROOT}/mnt/cryptdisk"
+								mount /dev/vg/root "${NEW_ROOT}/mnt/cryptdisk"
+							else
+								umount ${NEW_ROOT}
+								mount /dev/vg/root ${NEW_ROOT}
+							fi
+							swapon /dev/vg/swap
+						else
+							echo "[N]"
+						fi
+					else
+						echo "[N][N]"
+					fi
+				fi
+			done
+		fi
+
 		# If mount is successful break out of the loop
 		# else not a good root and start over.
 		if [ "$?" = '0' ]
